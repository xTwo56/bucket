// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
    id                        String          @id  @default(uuid())
    username                  String
    email                     String          @unique
    password                  String
    isSeller                  Boolean
    seller                    Seller?
    cart                      Cart?
    orderItems                OrderItems[]
    orders                    Order[]
  }

model Seller {
    id           String          @id  @default(uuid())
    products     Product[]
    rating       Float
    phone        String
    userId       String          @unique 
    user         User            @relation(fields:[userId], references:[id])
  }

model Product {
    id            String          @id  @default(uuid())
    name          String
    description   String
    price         String
    quantity      Int             @default(1)
    sellerId      String
    seller        Seller          @relation(fields:[sellerId], references: [id])
    cartItems     CartItems[]
    orderItems    OrderItems[]
  }

model CartItems {
    id            String          @id @default(uuid())
    cartId        String
    cart          Cart?           @relation(fields:[cartId], references: [id])
    productId     String
    product       Product         @relation(fields:[productId], references: [id])
    quantity      Int             @default(1)
  }

  model Cart {
      id          String          @id @default(uuid())
      userId      String          @unique
      user        User?           @relation(fields:[userId], references:[id])
      cartItems   CartItems[]
    }

  model OrderItems {
    id            String          @id @default(uuid())
    userId        String          @unique
    user          User            @relation(fields:[userId], references: [id])
    productId     String
    product       Product         @relation(fields:[productId], references: [id])
    order         Order[]
    confirmed     Boolean
    returned      Boolean
    }

  model Order {
    id            String          @id @default(uuid())
    userId        String
    user          User            @relation(fields:[userId], references: [id])
    status        OrderStatus
    orderItems    OrderItems[]
    }

enum OrderStatus {
    Pending
    Shipped
    Deliverd
    Cancelled
  }
